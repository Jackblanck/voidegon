---
interface Props {
  xp: number;
  race: string;
  rol: string;
  start?: number;
}

const { xp, race, rol, start = 2 } = Astro.props;

const xpThresholds = [
  0, 300, 900, 2700, 6500, 14000, 23000, 34000, 48000, 64000, 85000, 100000,
  120000, 140000, 165000, 195000, 225000, 265000, 305000, 355000,
];

function calcularPorcentaje(
  xp: number,
  level: number,
  xpUp: number
): [number, number] {
  // Obtener el umbral de experiencia actual y el umbral para el próximo nivel
  const xpActual = xpThresholds[level - 1];
  const xpSiguienteNivel =
    level < xpThresholds.length ? xpThresholds[level] : 0;

  // Calcular la cantidad de experiencia acumulada desde el umbral actual hasta el umbral del próximo nivel
  const xpAcumulada = xp - xpActual;

  // Calcular el porcentaje de experiencia hacia el próximo nivel
  const porcentaje = Math.floor((xpAcumulada / xpUp) * 100);

  return [porcentaje, xpSiguienteNivel];
}

let level = 1;

while (xp >= xpThresholds[level]) {
  level++;
}

const xpUp = xpThresholds[level] - xpThresholds[level - 1];
const [porcentaje, xpSiguienteNivel] = calcularPorcentaje(xp, level, xpUp);
console.log(porcentaje, xpSiguienteNivel);
---

<article
  class={`
		grid grid-cols-6 items-center gap-2 
		bg-[--gray] rounded-lg p-2
	`}
>
  <a href={`/extras/race/${race.toLowerCase().replaceAll(' ', '-')}`}>
    <section class={`col-span-1 row-start-1`} id='race'>
      <h6 class='text-[--title] font-[unbounded]'>{race}</h6>
    </section>
  </a>

  <section
    class={`col-span-4 font-["caveat_brush"] text-[--white] row-start-1 flex items-center justify-around w-full text-nowrap`}
    style={`grid-column-start: ${start};`}
    id='xp'
  >
    <span class='text-base'>
      Nivel <span class='text-[--light] text-lg'>{level}</span>
    </span>
    <div class='w-[80%] bg-[--gray] rounded-full h-1.5'>
      <div
        class='h-1.5 rounded-full'
        style={`width: min(${porcentaje}%, 100%)`}
        id='loading'
      >
      </div>
    </div>
    <span class='text-base'>
      <span class='text-[--date]'>{xp}</span>
      /
      <span class='text-xs'>{xpSiguienteNivel}</span>
    </span>
  </section>

  <a href={`/extras/rol/${rol.toLowerCase().replaceAll(' ', '-')}`}>
    <section class={`col-span-1 md:row-start-1 row-start-2`} id='rol'>
      <h6 class='text-[--subtitle] font-[unbounded]'>{rol}</h6>
    </section>
  </a>
</article>

<style>
  section {
    padding: 0.5rem;
    line-height: 200%;
  }
  a,
  section {
    background-color: var(--dark);
    border-radius: 0.5rem;

    text-align: center;

    transition: all 100ms ease;
    cursor: default;

    height: 100%;
  }
  a > section {
    cursor: pointer;
  }

  a:hover > section {
    background-color: var(--black);
  }

  h6 {
    font-weight: bold;
  }

  #xp > * {
    margin: 0 1rem;
  }

  /** MEDIA QUERYS */
  @media (max-width: 1024px) {
    article {
      display: flex;
      flex-direction: column;
    }
    #xp {
      order: 1;
    }
    a {
      width: 100%;
    }
  }

  /** Animations */
  @keyframes pulse {
    0% {
      opacity: 0.5;
    }
    50% {
      opacity: 1;
    }
    100% {
      opacity: 0.5;
    }
  }

  @keyframes loadXP {
    from {
      width: 0;
    }
  }

  #loading {
    background: linear-gradient(90deg, var(--date) 0%, var(--subtitle) 100%);
    animation:
      loadXP 3s forwards ease-in-out,
      pulse 5s ease infinite;
  }
</style>
